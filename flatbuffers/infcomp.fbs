namespace infcomp.protocol;

union MessageBody {
    TracesFromPriorRequest,
    ObservesInitRequest,
    ProposalRequest,
    TracesFromPriorReply,
    ObservesInitReply,
    ProposalReply
}

table Message {
    body:MessageBody;
}

root_type Message;
file_identifier "INFC";

union Distribution {
    Categorical,
    Discrete,
    Flip,
    Normal,
    UniformDiscrete,
    VMF,
    Poisson,
    UniformContinuous,
    MultivariateNormal,
    Laplace
}

table NDArray {
    data:[double];
    shape:[int];
}

table Categorical {
    prior_size:int;
    proposal_probabilities:NDArray;
}

table Discrete {
    prior_size:int;
    proposal_probabilities:NDArray;
}

table Flip {
    proposal_probability:double;
}

table Normal {
    prior_mean:double;
    prior_std:double;
    proposal_mean:double;
    proposal_std:double;
}

table UniformDiscrete {
    prior_min:int;
    prior_size:int;
    proposal_probabilities:NDArray;
}

table VMF {
    prior_mu:NDArray;
    prior_kappa:double;
    proposal_mu:NDArray;
    proposal_kappa:double;
}

table MultivariateNormal {
    prior_mean:NDArray;
    prior_sigma:NDArray;
    proposal_mean:NDArray;
    proposal_sigma:NDArray;
}

table Poisson {
    prior_lambda:double;
    proposal_lambda:double;
}

table UniformContinuous {
    prior_min:double;
    prior_max:double;
    proposal_mode:double;      // [prior_min, prior_max]
    proposal_certainty:double; // [0, infinity)
}

table Laplace {
    prior_location:double;
    prior_scale:double;
    proposal_location:double;
    proposal_scale:double;
}

table Sample {
    time:int;
    address:string;
    instance:int;
    distribution:Distribution;
    value:NDArray;
}

table Trace {
    observes:NDArray;
    samples:[Sample];
}

table TracesFromPriorRequest {
    num_traces:int;
}

table TracesFromPriorReply {
    traces:[Trace];
}

table ObservesInitRequest {
    observes:NDArray;
}

table ObservesInitReply {
    success:bool;
}

table ProposalRequest {
    current_sample:Sample;
    previous_sample:Sample;
}

table ProposalReply {
    success:bool;
    distribution:Distribution;
}
